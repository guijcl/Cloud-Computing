apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "api-gateway"
  namespace: "default"
  labels:
    app: "api-gateway"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 3
  selector:
    matchLabels:
      app: "api-gateway"
  template:
    metadata:
      labels:
        app: "api-gateway"
    spec:
      containers:
      - name: "api-gateway"
        image: "gcr.io/jenkinstest-351122/api-gateway"
        readinessProbe:
          initialDelaySeconds: 10

          httpGet:
            path: "/health"
            port: 80
        livenessProbe:
          initialDelaySeconds: 10

          httpGet:
            path: "/health"
            port: 80
---
apiVersion: "autoscaling/v2beta2"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "api-gateway-hpa-fphq"
  namespace: "default"
  labels:
    app: "api-gateway"
spec:
  scaleTargetRef:
    kind: "Deployment"
    name: "api-gateway"
    apiVersion: "apps/v1"
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
---
apiVersion: "v1"
kind: Service
metadata:
  name: api-gateway
spec:
  type: ClusterIP
  selector:
    app: api-gateway
  ports:
  - name: http
    port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-gateway-ingress
spec:
  defaultBackend:
    service:
      name: api-gateway
      port:
        number: 80
  rules:
  - http:
      paths:
      - path: /api/ui
        pathType: ImplementationSpecific
        backend:
          service:
            name: api-gateway
            port:
              number: 80


